"""Add new storage fields in Document

Revision ID: 0869ce9d86de
Revises: b34eca8bb7bf
Create Date: 2025-06-23 14:31:43.428038

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '0869ce9d86de'
down_revision = 'b34eca8bb7bf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('celery_taskmeta', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('task_id'))

    op.drop_table('celery_taskmeta')
    with op.batch_alter_table('celery_tasksetmeta', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('taskset_id'))

    op.drop_table('celery_tasksetmeta')
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('storage_type', sa.Enum('LOCAL', 'GDRIVE', name='storagetype'), nullable=False))
        batch_op.add_column(sa.Column('storage_id', sa.String(length=255), nullable=True))
        batch_op.alter_column('internal_filename', existing_type=mysql.VARCHAR(length=255), nullable=True)
        batch_op.alter_column('directory_path', existing_type=mysql.VARCHAR(length=255), nullable=True)
        batch_op.alter_column(
            'created_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('now()'), existing_nullable=False
        )
        batch_op.alter_column(
            'updated_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('now()'), existing_nullable=False
        )

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.alter_column(
            'created_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('now()'), existing_nullable=False
        )
        batch_op.alter_column(
            'updated_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('now()'), existing_nullable=False
        )

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column(
            'created_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('now()'), existing_nullable=False
        )
        batch_op.alter_column(
            'updated_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('now()'), existing_nullable=False
        )

    with op.batch_alter_table('users_roles_through', schema=None) as batch_op:
        batch_op.alter_column(
            'created_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('now()'), existing_nullable=False
        )
        batch_op.alter_column(
            'updated_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('now()'), existing_nullable=False
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users_roles_through', schema=None) as batch_op:
        batch_op.alter_column(
            'updated_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('(now())'), existing_nullable=False
        )
        batch_op.alter_column(
            'created_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('(now())'), existing_nullable=False
        )

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column(
            'updated_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('(now())'), existing_nullable=False
        )
        batch_op.alter_column(
            'created_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('(now())'), existing_nullable=False
        )

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.alter_column(
            'updated_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('(now())'), existing_nullable=False
        )
        batch_op.alter_column(
            'created_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('(now())'), existing_nullable=False
        )

    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.alter_column(
            'updated_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('(now())'), existing_nullable=False
        )
        batch_op.alter_column(
            'created_at', existing_type=mysql.TIMESTAMP(), server_default=sa.text('(now())'), existing_nullable=False
        )
        batch_op.alter_column('directory_path', existing_type=mysql.VARCHAR(length=255), nullable=False)
        batch_op.alter_column('internal_filename', existing_type=mysql.VARCHAR(length=255), nullable=False)
        batch_op.drop_column('storage_id')
        batch_op.drop_column('storage_type')

    op.create_table(
        'celery_tasksetmeta',
        sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('taskset_id', mysql.VARCHAR(length=155), nullable=True),
        sa.Column('result', sa.BLOB(), nullable=True),
        sa.Column('date_done', mysql.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        mysql_collate='utf8mb4_0900_ai_ci',
        mysql_default_charset='utf8mb4',
        mysql_engine='InnoDB',
    )
    with op.batch_alter_table('celery_tasksetmeta', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('taskset_id'), ['taskset_id'], unique=True)

    op.create_table(
        'celery_taskmeta',
        sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('task_id', mysql.VARCHAR(length=155), nullable=True),
        sa.Column('status', mysql.VARCHAR(length=50), nullable=True),
        sa.Column('result', sa.BLOB(), nullable=True),
        sa.Column('date_done', mysql.DATETIME(), nullable=True),
        sa.Column('traceback', mysql.TEXT(), nullable=True),
        sa.Column('name', mysql.VARCHAR(length=155), nullable=True),
        sa.Column('args', sa.BLOB(), nullable=True),
        sa.Column('kwargs', sa.BLOB(), nullable=True),
        sa.Column('worker', mysql.VARCHAR(length=155), nullable=True),
        sa.Column('retries', mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('queue', mysql.VARCHAR(length=155), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        mysql_collate='utf8mb4_0900_ai_ci',
        mysql_default_charset='utf8mb4',
        mysql_engine='InnoDB',
    )
    with op.batch_alter_table('celery_taskmeta', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('task_id'), ['task_id'], unique=True)

    # ### end Alembic commands ###
